// generated by GoCpp from file '$(ImportDir)/runtime/iface.go'
#pragma once

#include "gocpp/support.fwd.h"


namespace golang::runtime
{
    const long itabInitSize = 512;
    using uint16InterfacePtr = uint16_t;
    using uint32InterfacePtr = uint32_t;
    using uint64InterfacePtr = uint64_t;
    using stringInterfacePtr = std::string;
    using sliceInterfacePtr = gocpp::slice<unsigned char>;
}
#include "golang/runtime/runtime2.fwd.h"

namespace golang::runtime
{
    struct itabTableType;
}
#include "golang/internal/abi/funcpc.fwd.h"
#include "golang/internal/abi/switch.fwd.h"
#include "golang/internal/abi/type.fwd.h"
#include "golang/internal/goarch/goarch.fwd.h"
#include "golang/runtime/asan0.fwd.h"
#include "golang/runtime/atomic_pointer.fwd.h"
#include "golang/runtime/error.fwd.h"
#include "golang/runtime/extern.fwd.h"
#include "golang/runtime/internal/atomic/atomic_amd64.fwd.h"
#include "golang/runtime/internal/sys/intrinsics.fwd.h"
// #include "golang/runtime/lock_sema.fwd.h" [Ignored, known errors]
// #include "golang/runtime/lockrank.fwd.h" [Ignored, known errors]
// #include "golang/runtime/lockrank_off.fwd.h" [Ignored, known errors]
#include "golang/runtime/malloc.fwd.h"
#include "golang/runtime/mbarrier.fwd.h"
#include "golang/runtime/msan0.fwd.h"
#include "golang/runtime/panic.fwd.h"
// #include "golang/runtime/race0.fwd.h" [Ignored, known errors]
// #include "golang/runtime/rand.fwd.h" [Ignored, known errors]
#include "golang/runtime/slice.fwd.h"
// #include "golang/runtime/stubs.fwd.h" [Ignored, known errors]
// #include "golang/runtime/symtab.fwd.h" [Ignored, known errors]
#include "golang/runtime/type.fwd.h"
#include "golang/unsafe/unsafe.fwd.h"
