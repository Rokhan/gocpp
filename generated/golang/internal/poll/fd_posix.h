// generated by GoCpp from file '$(ImportDir)/internal/poll/fd_posix.go'
#pragma once

#include <functional>
#include <string>
#include <tuple>
#include <vector>

#include "golang/internal/poll/fd_posix.fwd.h"
#include "gocpp/support.h"

#include "golang/internal/poll/fd_mutex.h"
#include "golang/internal/poll/fd_poll_runtime.h"
#include "golang/internal/poll/fd_windows.h"
#include "golang/internal/syscall/windows/syscall_windows.h"
#include "golang/sync/mutex.h"
#include "golang/syscall/syscall_windows.h"
#include "golang/syscall/types_windows.h"

namespace golang::poll
{
    struct gocpp::error eofError(struct FD* fd, int n, struct gocpp::error err);
    struct gocpp::error Shutdown(struct FD* fd, int how);
    struct gocpp::error Fchown(struct FD* fd, int uid, int gid);
    struct gocpp::error Ftruncate(struct FD* fd, int64_t size);
    struct gocpp::error RawControl(struct FD* fd, std::function<void (uintptr_t)> f);
    struct gocpp::error ignoringEINTR(std::function<struct gocpp::error ()> fn);
}

