// generated by GoCpp from file '$(ImportDir)/runtime/trace2region.go'
#pragma once

#include <functional>
#include <string>
#include <tuple>
#include <vector>

#include "golang/runtime/trace2region.fwd.h"
#include "gocpp/support.h"

#include "golang/internal/goarch/goarch.h"
#include "golang/runtime/internal/sys/nih.h"
#include "golang/runtime/malloc.h"
#include "golang/runtime/mem.h"
#include "golang/runtime/panic.h"
// #include "golang/runtime/stubs.h"  [Ignored, known errors]
#include "golang/unsafe/unsafe.h"

namespace golang::runtime
{
    struct traceRegionAlloc
    {
        traceRegionAllocBlock* head;
        uintptr_t off;

        using isGoStruct = void;

        std::ostream& PrintTo(std::ostream& os) const;
    };

    std::ostream& operator<<(std::ostream& os, const struct traceRegionAlloc& value);
    struct traceRegionAllocBlock
    {
        sys::NotInHeap _;
        traceRegionAllocBlock* next;
        gocpp::array<unsigned char, (64 << 10) - goarch::PtrSize> data;

        using isGoStruct = void;

        std::ostream& PrintTo(std::ostream& os) const;
    };

    std::ostream& operator<<(std::ostream& os, const struct traceRegionAllocBlock& value);
    notInHeap* alloc(struct traceRegionAlloc* a, uintptr_t n);
    void drop(struct traceRegionAlloc* a);
}

