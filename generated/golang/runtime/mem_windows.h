// generated by GoCpp from file '$(ImportDir)/runtime/mem_windows.go'
#pragma once

#include <functional>
#include <string>
#include <tuple>
#include <vector>

#include "golang/runtime/mem_windows.fwd.h"
#include "gocpp/support.h"

#include "golang/runtime/os_windows.h"
#include "golang/unsafe/unsafe.h"
#include "golang/runtime/panic.h"
// #include "golang/runtime/stubs.h"  [Ignored, known errors]

namespace golang::runtime
{
    extern int _MEM_COMMIT;
    extern int _MEM_RESERVE;
    extern int _MEM_DECOMMIT;
    extern int _MEM_RELEASE;
    extern int _PAGE_READWRITE;
    extern int _PAGE_NOACCESS;
    extern int _ERROR_NOT_ENOUGH_MEMORY;
    extern int _ERROR_COMMITMENT_LIMIT;
    unsafe::Pointer sysAllocOS(uintptr_t n);
    void sysUnusedOS(unsafe::Pointer v, uintptr_t n);
    void sysUsedOS(unsafe::Pointer v, uintptr_t n);
    void sysHugePageOS(unsafe::Pointer v, uintptr_t n);
    void sysNoHugePageOS(unsafe::Pointer v, uintptr_t n);
    void sysHugePageCollapseOS(unsafe::Pointer v, uintptr_t n);
    void sysFreeOS(unsafe::Pointer v, uintptr_t n);
    void sysFaultOS(unsafe::Pointer v, uintptr_t n);
    unsafe::Pointer sysReserveOS(unsafe::Pointer v, uintptr_t n);
    void sysMapOS(unsafe::Pointer v, uintptr_t n);
}

