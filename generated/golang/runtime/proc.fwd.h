// generated by GoCpp from file '$(ImportDir)/runtime/proc.go'
#pragma once

#include "gocpp/support.fwd.h"


namespace golang::runtime
{
    const long _GoidCacheBatch = 16;
    const long freezeStopWait = 0x7fffffff;
    using stwReason = uint8_t;
    struct worldStop;
    struct gocpp_id_2;
    struct gocpp_id_18;
    struct sysmontick;
    const int forcePreemptNS = 10 * 1000 * 1000;
    using pMask = gocpp::slice<uint32_t>;
    struct randomOrder;
    struct randomEnum;
    struct initTask;
    struct tracestat;
    const runtime::stwReason stwUnknown = 0;
    const stwReason stwGCMarkTerm = 1;
    const stwReason stwGCSweepTerm = 2;
    const stwReason stwWriteHeapDump = 3;
    const stwReason stwGoroutineProfile = 4;
    const stwReason stwGoroutineProfileCleanup = 5;
    const stwReason stwAllGoroutinesStack = 6;
    const stwReason stwReadMemStats = 7;
    const stwReason stwAllThreadsSyscall = 8;
    const stwReason stwGOMAXPROCS = 9;
    const stwReason stwStartTrace = 10;
    const stwReason stwStopTrace = 11;
    const stwReason stwForTestCountPagesInUse = 12;
    const stwReason stwForTestReadMetricsSlow = 13;
    const stwReason stwForTestReadMemStatsSlow = 14;
    const stwReason stwForTestPageCachePagesLeaked = 15;
    const stwReason stwForTestResetDebugLog = 16;
}
#include "golang/internal/goos/zgoos_windows.fwd.h"
#include "golang/runtime/race0.fwd.h"
#include "golang/runtime/runtime2.fwd.h"
#include "golang/unsafe/unsafe.fwd.h"

namespace golang::runtime
{
    const int osHasLowResClockInt = goos::IsWindows;
    struct cgothreadstart;
    const bool randomizeScheduler = raceenabled;
    struct gQueue;
    struct gList;
    const bool osHasLowResClock = osHasLowResClockInt > 0;
}
