// generated by GoCpp from file 'tests/TourOfGo/generics/generics.go'
#pragma once

#include <functional>
#include <string>
#include <tuple>
#include <vector>

#include "tests/TourOfGo/generics/generics.fwd.h"
#include "gocpp/support.h"


namespace golang::main
{

    template<typename T>
    std::tuple<uint32_t, uint32_t> HashStr(T sep);
    template<typename T> 
    struct Wrapper
    {
        T value;

        using isGoStruct = void;

        template<typename U> requires gocpp::GoStruct<U>
        operator U();

        template<typename U> requires gocpp::GoStruct<U>
        bool operator==(const U& ref) const;

        std::ostream& PrintTo(std::ostream& os) const;
    };

    template<typename T>
    std::ostream& operator<<(std::ostream& os, const struct Wrapper<T>& value);

    template<typename T>
    T Get(struct Wrapper<T>* p);
    void main();
}

