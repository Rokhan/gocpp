// generated by GoCpp from file '$(ImportDir)/runtime/mgclimit.go'
#pragma once

#include "gocpp/support.fwd.h"


namespace golang::runtime
{
    const double gcCPULimiterUpdatePeriod = 10e6;
    const double capacityPerProc = 1e9;
    using limiterEventType = uint8_t;
    const long limiterEventBits = 3;
    using limiterEventStamp = uint64_t;
    const runtime::limiterEventType limiterEventNone = 0;
    const runtime::limiterEventType limiterEventIdleMarkWork = 1;
    const runtime::limiterEventType limiterEventMarkAssist = 2;
    const runtime::limiterEventType limiterEventScavengeAssist = 3;
    const runtime::limiterEventType limiterEventIdle = 4;
    const uint64_t limiterEventTypeMask = uint64_t((1 << limiterEventBits) - 1) << (64 - limiterEventBits);
    const limiterEventStamp limiterEventStampNone = limiterEventStamp(0);
}
#include "golang/runtime/internal/atomic/types.fwd.h"

namespace golang::runtime
{
    struct gcCPULimiterState;
    struct limiterEvent;
}
