// generated by GoCpp from file '$(ImportDir)/runtime/plugin.go'
#pragma once

#include <functional>
#include <string>
#include <tuple>
#include <vector>

#include "golang/runtime/plugin.fwd.h"
#include "gocpp/support.h"

#include "golang/runtime/print.h"
#include "golang/runtime/iface.h"
// #include "golang/runtime/symtab.h"  [Ignored, known errors]
#include "golang/unsafe/unsafe.h"
#include "golang/runtime/panic.h"
#include "golang/internal/abi/type.h"
#include "golang/runtime/type.h"
#include "golang/runtime/lock_sema.h"
#include "golang/runtime/proc.h"
#include "golang/runtime/runtime2.h"
#include "golang/runtime/typekind.h"

namespace golang::runtime
{
    std::tuple<std::string, gocpp::map<std::string, any>, gocpp::slice<initTask*>, std::string> plugin_lastmoduleinit();
    void pluginftabverify(moduledata* md);
    bool inRange(uintptr_t r0, uintptr_t r1, uintptr_t v0, uintptr_t v1);
    struct ptabEntry
    {
        nameOff name;
        typeOff typ;

        using isGoStruct = void;

        std::ostream& PrintTo(std::ostream& os) const;
    };

    std::ostream& operator<<(std::ostream& os, const ptabEntry& value);
}

