// generated by GoCpp from file '$(ImportDir)/internal/fmtsort/sort.go'
#pragma once

#include <functional>
#include <string>
#include <tuple>
#include <vector>

#include "golang/internal/fmtsort/sort.fwd.h"
#include "gocpp/support.h"

#include "golang/reflect/type.h"
#include "golang/reflect/value.h"
#include "golang/sort/sort.h"

namespace golang::fmtsort
{
    struct SortedMap
    {
        gocpp::slice<reflect::Value> Key;
        gocpp::slice<reflect::Value> Value;

        using isGoStruct = void;

        std::ostream& PrintTo(std::ostream& os) const;
    };

    std::ostream& operator<<(std::ostream& os, const struct SortedMap& value);
    int Len(struct SortedMap* o);
    bool Less(struct SortedMap* o, int i, int j);
    void Swap(struct SortedMap* o, int i, int j);
    SortedMap* Sort(reflect::Value mapValue);
    int compare(reflect::Value aVal, reflect::Value bVal);
    std::tuple<int, bool> nilCompare(reflect::Value aVal, reflect::Value bVal);
    int floatCompare(double a, double b);
    bool isNaN(double a);
}

