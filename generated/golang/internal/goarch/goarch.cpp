// generated by GoCpp from file '$(ImportDir)/internal/goarch/goarch.go'
#include <complex>
#include <functional>
#include <iostream>
#include <iomanip>
#include <map>
#include <string>
#include <tuple>
#include <vector>

#include "golang/internal/goarch/goarch.h"
#include "gocpp/support.h"

#include "golang/internal/goarch/zgoarch_amd64.h"
#include "golang/internal/goarch/goarch_amd64.h"

namespace golang::goarch
{
    // using ArchFamilyType = int;
    ArchFamilyType AMD64 = 0;
    goarch.ArchFamilyType ARM = 1;
    goarch.ArchFamilyType ARM64 = 2;
    goarch.ArchFamilyType I386 = 3;
    goarch.ArchFamilyType LOONG64 = 4;
    goarch.ArchFamilyType MIPS = 5;
    goarch.ArchFamilyType MIPS64 = 6;
    goarch.ArchFamilyType PPC64 = 7;
    goarch.ArchFamilyType RISCV64 = 8;
    goarch.ArchFamilyType S390X = 9;
    goarch.ArchFamilyType WASM = 10;
    int PtrSize = 4 << (^ uintptr(0) >> 63);
    ArchFamilyType ArchFamily = _ArchFamily;
    bool BigEndian = IsArmbe | IsArm64be | IsMips | IsMips64 | IsPpc | IsPpc64 | IsS390 | IsS390x | IsSparc | IsSparc64 == 1;
    int DefaultPhysPageSize = _DefaultPhysPageSize;
    int PCQuantum = _PCQuantum;
    int Int64Align = PtrSize;
    int MinFrameSize = _MinFrameSize;
    int StackAlign = _StackAlign;
}

