// generated by GoCpp from file '$(ImportDir)/internal/syscall/windows/symlink_windows.go'
#include <complex>
#include <functional>
#include <iostream>
#include <iomanip>
#include <map>
#include <string>
#include <tuple>
#include <vector>

#include "golang/internal/syscall/windows/symlink_windows.h"
#include "gocpp/support.h"

#include "golang/syscall/syscall_windows.h"

namespace golang::windows
{
    namespace rec
    {
        using namespace mocklib::rec;
    }

    // symlink support for CreateSymbolicLink() starting with Windows 10 (1703, v10.0.14972)
    // FileInformationClass values
    
    template<typename T> requires gocpp::GoStruct<T>
    FILE_ATTRIBUTE_TAG_INFO::operator T()
    {
        T result;
        result.FileAttributes = this->FileAttributes;
        result.ReparseTag = this->ReparseTag;
        return result;
    }

    template<typename T> requires gocpp::GoStruct<T>
    bool FILE_ATTRIBUTE_TAG_INFO::operator==(const T& ref) const
    {
        if (FileAttributes != ref.FileAttributes) return false;
        if (ReparseTag != ref.ReparseTag) return false;
        return true;
    }

    std::ostream& FILE_ATTRIBUTE_TAG_INFO::PrintTo(std::ostream& os) const
    {
        os << '{';
        os << "" << FileAttributes;
        os << " " << ReparseTag;
        os << '}';
        return os;
    }

    std::ostream& operator<<(std::ostream& os, const struct FILE_ATTRIBUTE_TAG_INFO& value)
    {
        return value.PrintTo(os);
    }

}

