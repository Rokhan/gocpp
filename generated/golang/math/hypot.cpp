// generated by GoCpp from file '$(ImportDir)/math/hypot.go'
#include <complex>
#include <functional>
#include <iostream>
#include <iomanip>
#include <map>
#include <string>
#include <tuple>
#include <vector>

#include "golang/math/hypot.h"
#include "gocpp/support.h"

#include "golang/math/abs.h"
#include "golang/math/bits.h"
#include "golang/math/hypot_asm.h"
#include "golang/math/sqrt.h"

namespace golang::math
{
    namespace rec
    {
        using namespace mocklib::rec;
    }

    double Hypot(double p, double q)
    {
        if(haveArchHypot)
        {
            return archHypot(p, q);
        }
        return hypot(p, q);
    }

    double hypot(double p, double q)
    {
        std::tie(p, q) = std::tuple{Abs(p), Abs(q)};
        //Go switch emulation
        {
            int conditionId = -1;
            if(IsInf(p, 1) || IsInf(q, 1)) { conditionId = 0; }
            else if(IsNaN(p) || IsNaN(q)) { conditionId = 1; }
            switch(conditionId)
            {
                case 0:
                    return Inf(1);
                    break;
                case 1:
                    return NaN();
                    break;
            }
        }
        if(p < q)
        {
            std::tie(p, q) = std::tuple{q, p};
        }
        if(p == 0)
        {
            return 0;
        }
        q = q / p;
        return p * Sqrt(1 + q * q);
    }

}

