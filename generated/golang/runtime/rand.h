// generated by GoCpp from file '$(ImportDir)/runtime/rand.go'
#pragma once

#include <functional>
#include <string>
#include <tuple>
#include <vector>

#include "golang/runtime/rand.fwd.h"
#include "gocpp/support.h"

#include "golang/internal/chacha8rand/chacha8.h"
#include "golang/internal/goarch/zgoarch_amd64.h"
#include "golang/runtime/internal/math/math.h"
// #include "golang/runtime/lock_sema.h"  [Ignored, known errors]
// #include "golang/runtime/os_windows.h"  [Ignored, known errors]
#include "golang/runtime/panic.h"
#include "golang/runtime/runtime2.h"
// #include "golang/runtime/stubs.h"  [Ignored, known errors]
#include "golang/runtime/time_nofake.h"
#include "golang/unsafe/unsafe.h"

namespace golang::runtime
{
    void randinit();
    void readTimeRandom(gocpp::slice<unsigned char> r);
    uint64_t bootstrapRand();
    void bootstrapRandReseed();
    uint32_t rand32();
    uint64_t rand();
    void mrandinit(m* mp);
    uint32_t randn(uint32_t n);
    uint32_t cheaprand();
    int64_t cheaprand64();
    uint32_t cheaprandn(uint32_t n);
    uint32_t legacy_fastrand();
    uint32_t legacy_fastrandn(uint32_t n);
    uint64_t legacy_fastrand64();
}

