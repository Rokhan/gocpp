// generated by GoCpp from file '$(ImportDir)/unsafe/unsafe.go'
#include <complex>
#include <functional>
#include <iostream>
#include <iomanip>
#include <map>
#include <string>
#include <tuple>
#include <vector>

#include "golang/unsafe/unsafe.h"
#include "gocpp/support.h"

namespace golang::unsafe
{
    namespace rec
    {
        using namespace mocklib::rec;
    }

    uintptr_t Sizeof(golang::unsafe::ArbitraryType x)
    /* convertBlockStmt, nil block */;

    uintptr_t Offsetof(golang::unsafe::ArbitraryType x)
    /* convertBlockStmt, nil block */;

    uintptr_t Alignof(golang::unsafe::ArbitraryType x)
    /* convertBlockStmt, nil block */;

    unsafe::Pointer Add(golang::unsafe::Pointer ptr, golang::unsafe::IntegerType len)
    /* convertBlockStmt, nil block */;

    gocpp::slice<unsafe::ArbitraryType> Slice(golang::unsafe::ArbitraryType* ptr, golang::unsafe::IntegerType len)
    /* convertBlockStmt, nil block */;

    unsafe::ArbitraryType* SliceData(gocpp::slice<golang::unsafe::ArbitraryType> slice)
    /* convertBlockStmt, nil block */;

    std::string String(unsigned char* ptr, golang::unsafe::IntegerType len)
    /* convertBlockStmt, nil block */;

    unsigned char* StringData(std::string str)
    /* convertBlockStmt, nil block */;

}

