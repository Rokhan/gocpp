// generated by GoCpp from file '$(ImportDir)/syscall/security_windows.go'
#pragma once

#include "gocpp/support.fwd.h"


namespace golang::syscall
{
    const long STANDARD_RIGHTS_REQUIRED = 0xf0000;
    const long STANDARD_RIGHTS_READ = 0x20000;
    const long STANDARD_RIGHTS_WRITE = 0x20000;
    const long STANDARD_RIGHTS_EXECUTE = 0x20000;
    const long STANDARD_RIGHTS_ALL = 0x1F0000;
    const long NameUnknown = 0;
    const long NameFullyQualifiedDN = 1;
    const long NameSamCompatible = 2;
    const long NameDisplay = 3;
    const long NameUniqueId = 6;
    const long NameCanonical = 7;
    const long NameUserPrincipal = 8;
    const long NameCanonicalEx = 9;
    const long NameServicePrincipal = 10;
    const long NameDnsDomain = 12;
    const int NetSetupUnknownStatus = 0;
    const int NetSetupUnjoined = 1;
    const int NetSetupWorkgroupName = 2;
    const int NetSetupDomainName = 3;
    struct UserInfo10;
    const int SidTypeUser = 1 + 0;
    const int SidTypeGroup = 1 + 1;
    const int SidTypeDomain = 1 + 2;
    const int SidTypeAlias = 1 + 3;
    const int SidTypeWellKnownGroup = 1 + 4;
    const int SidTypeDeletedAccount = 1 + 5;
    const int SidTypeInvalid = 1 + 6;
    const int SidTypeUnknown = 1 + 7;
    const int SidTypeComputer = 1 + 8;
    const int SidTypeLabel = 1 + 9;
    struct SID;
    const int TOKEN_ASSIGN_PRIMARY = 1 << 0;
    const int TOKEN_DUPLICATE = 1 << 1;
    const int TOKEN_IMPERSONATE = 1 << 2;
    const int TOKEN_QUERY = 1 << 3;
    const int TOKEN_QUERY_SOURCE = 1 << 4;
    const int TOKEN_ADJUST_PRIVILEGES = 1 << 5;
    const int TOKEN_ADJUST_GROUPS = 1 << 6;
    const int TOKEN_ADJUST_DEFAULT = 1 << 7;
    const int TOKEN_ADJUST_SESSIONID = 1 << 8;
    const int TokenUser = 1 + 0;
    const int TokenGroups = 1 + 1;
    const int TokenPrivileges = 1 + 2;
    const int TokenOwner = 1 + 3;
    const int TokenPrimaryGroup = 1 + 4;
    const int TokenDefaultDacl = 1 + 5;
    const int TokenSource = 1 + 6;
    const int TokenType = 1 + 7;
    const int TokenImpersonationLevel = 1 + 8;
    const int TokenStatistics = 1 + 9;
    const int TokenRestrictedSids = 1 + 10;
    const int TokenSessionId = 1 + 11;
    const int TokenGroupsAndPrivileges = 1 + 12;
    const int TokenSessionReference = 1 + 13;
    const int TokenSandBoxInert = 1 + 14;
    const int TokenAuditPolicy = 1 + 15;
    const int TokenOrigin = 1 + 16;
    const int TokenElevationType = 1 + 17;
    const int TokenLinkedToken = 1 + 18;
    const int TokenElevation = 1 + 19;
    const int TokenHasRestrictions = 1 + 20;
    const int TokenAccessInformation = 1 + 21;
    const int TokenVirtualizationAllowed = 1 + 22;
    const int TokenVirtualizationEnabled = 1 + 23;
    const int TokenIntegrityLevel = 1 + 24;
    const int TokenUIAccess = 1 + 25;
    const int TokenMandatoryPolicy = 1 + 26;
    const int TokenLogonSid = 1 + 27;
    const int MaxTokenInfoClass = 1 + 28;
    struct SIDAndAttributes;
    struct Tokenuser;
    struct Tokenprimarygroup;
    const int TOKEN_ALL_ACCESS = STANDARD_RIGHTS_REQUIRED | TOKEN_ASSIGN_PRIMARY | TOKEN_DUPLICATE | TOKEN_IMPERSONATE | TOKEN_QUERY | TOKEN_QUERY_SOURCE | TOKEN_ADJUST_PRIVILEGES | TOKEN_ADJUST_GROUPS | TOKEN_ADJUST_DEFAULT | TOKEN_ADJUST_SESSIONID;
    const int TOKEN_READ = STANDARD_RIGHTS_READ | TOKEN_QUERY;
    const int TOKEN_WRITE = STANDARD_RIGHTS_WRITE | TOKEN_ADJUST_PRIVILEGES | TOKEN_ADJUST_GROUPS | TOKEN_ADJUST_DEFAULT;
    const int TOKEN_EXECUTE = STANDARD_RIGHTS_EXECUTE;
}
#include "golang/syscall/syscall_windows.fwd.h"

namespace golang::syscall
{
    using Token = syscall::Handle;
}
