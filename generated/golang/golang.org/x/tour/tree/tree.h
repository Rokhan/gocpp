// generated by GoCpp from file '$(ImportDir)/golang.org/x/tour/tree/tree.go'
#pragma once

#include <functional>
#include <string>
#include <tuple>
#include <vector>

#include "golang/golang.org/x/tour/tree/tree.fwd.h"
#include "gocpp/support.h"


namespace golang::tree
{
    struct Tree
    {
        Tree* Left;
        int Value;
        Tree* Right;

        using isGoStruct = void;

        template<typename T> requires gocpp::GoStruct<T>
        operator T();

        template<typename T> requires gocpp::GoStruct<T>
        bool operator==(const T& ref) const;

        std::ostream& PrintTo(std::ostream& os) const;
    };

    std::ostream& operator<<(std::ostream& os, const struct Tree& value);
    struct Tree* New(int k);
    struct Tree* insert(struct Tree* t, int v);
    std::string String(struct Tree* t);
}

