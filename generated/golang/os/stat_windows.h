// generated by GoCpp from file '$(ImportDir)/os/stat_windows.go'
#pragma once

#include <functional>
#include <string>
#include <tuple>
#include <vector>

#include "golang/os/stat_windows.fwd.h"
#include "gocpp/support.h"

#include "golang/internal/poll/fd_mutex.h"
#include "golang/internal/poll/fd_poll_runtime.h"
#include "golang/internal/poll/fd_windows.h"
#include "golang/internal/syscall/windows/syscall_windows.h"
#include "golang/io/fs/fs.h"
#include "golang/os/dir_windows.h"
#include "golang/os/file_windows.h"
#include "golang/os/types.h"
#include "golang/sync/mutex.h"
#include "golang/syscall/syscall_windows.h"
#include "golang/syscall/types_windows.h"
#include "golang/time/time.h"
#include "golang/time/zoneinfo.h"

namespace golang::os
{
    std::tuple<os::FileInfo, struct gocpp::error> stat(std::string funcname, std::string name, bool followSurrogates);
    std::tuple<os::FileInfo, struct gocpp::error> statHandle(std::string name, syscall::Handle h);
    std::tuple<os::FileInfo, struct gocpp::error> statNolog(std::string name);
    std::tuple<os::FileInfo, struct gocpp::error> lstatNolog(std::string name);

    namespace rec
    {
        std::tuple<os::FileInfo, struct gocpp::error> Stat(struct File* file);
    }
}

