// generated by GoCpp from file 'tests/TourOfGo/moretypes/exercise-fibonacci-closure.go'
#include <complex>
#include <functional>
#include <iostream>
#include <iomanip>
#include <map>
#include <string>
#include <tuple>
#include <vector>

#include "tests/TourOfGo/moretypes/exercise-fibonacci-closure.h"
#include "gocpp/support.h"

#include "golang/fmt/print.h"

namespace golang::main
{
    namespace rec
    {
        using namespace mocklib::rec;
        using namespace fmt::rec;
    }

    std::function<int ()> fibonacci()
    {
        auto f0 = 0;
        auto f1 = 1;
        return [=]() mutable -> int
        {
            auto result = f0;
            auto f2 = f0 + f1;
            f0 = f1;
            f1 = f2;
            return result;
        };
    }

    void main()
    {
        auto f = fibonacci();
        for(auto i = 0; i < 10; i++)
        {
            mocklib::Println(f());
        }
    }

}

int main()
{
    try
    {
        std::cout << std::boolalpha << std::setprecision(5) << std::fixed;
        golang::main::main();
        return 0;
    }
    catch(const gocpp::GoPanic& ex)
    {
        std::cout << "Panic: " << ex.what() << std::endl;
        return -1;
    }
}
