// generated by GoCpp from file '$(ImportDir)/internal/syscall/windows/registry/zsyscall_windows.go'
#pragma once

#include <functional>
#include <string>
#include <tuple>
#include <vector>

#include "golang/internal/syscall/windows/registry/zsyscall_windows.fwd.h"
#include "gocpp/support.h"

#include "golang/internal/syscall/windows/sysdll/sysdll.h"
#include "golang/syscall/dll_windows.h"
#include "golang/syscall/syscall_windows.h"
#include "golang/syscall/types_windows.h"
#include "golang/syscall/zerrors_windows.h"
#include "golang/unsafe/unsafe.h"

namespace golang::registry
{
    extern std::string errERROR_IO_PENDING;
    extern std::string errERROR_EINVAL;
    std::string errnoErr(syscall::Errno e);
    extern syscall::LazyDLL* modadvapi32;
    extern syscall::LazyDLL* modkernel32;
    extern syscall::LazyProc* procRegCreateKeyExW;
    extern syscall::LazyProc* procRegDeleteKeyW;
    extern syscall::LazyProc* procRegDeleteValueW;
    extern syscall::LazyProc* procRegEnumValueW;
    extern syscall::LazyProc* procRegLoadMUIStringW;
    extern syscall::LazyProc* procRegSetValueExW;
    extern syscall::LazyProc* procExpandEnvironmentStringsW;
    std::string regCreateKeyEx(syscall::Handle key, uint16_t* subkey, uint32_t reserved, uint16_t* go_class, uint32_t options, uint32_t desired, syscall::SecurityAttributes* sa, syscall::Handle* result, uint32_t* disposition);
    std::string regDeleteKey(syscall::Handle key, uint16_t* subkey);
    std::string regDeleteValue(syscall::Handle key, uint16_t* name);
    std::string regEnumValue(syscall::Handle key, uint32_t index, uint16_t* name, uint32_t* nameLen, uint32_t* reserved, uint32_t* valtype, unsigned char* buf, uint32_t* buflen);
    std::string regLoadMUIString(syscall::Handle key, uint16_t* name, uint16_t* buf, uint32_t buflen, uint32_t* buflenCopied, uint32_t flags, uint16_t* dir);
    std::string regSetValueEx(syscall::Handle key, uint16_t* valueName, uint32_t reserved, uint32_t vtype, unsigned char* buf, uint32_t bufsize);
    std::tuple<uint32_t, std::string> expandEnvironmentStrings(uint16_t* src, uint16_t* dst, uint32_t size);
}

