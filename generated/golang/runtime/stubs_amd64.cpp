// generated by GoCpp from file '$(ImportDir)/runtime/stubs_amd64.go'
#include <complex>
#include <functional>
#include <iostream>
#include <iomanip>
#include <map>
#include <string>
#include <tuple>
#include <vector>

#include "golang/runtime/stubs_amd64.h"
#include "gocpp/support.h"

#include "golang/unsafe/unsafe.h"

namespace golang::runtime
{
    namespace rec
    {
        using namespace mocklib::rec;
    }

    void gcWriteBarrierCX()
    /* convertBlockStmt, nil block */;

    void gcWriteBarrierDX()
    /* convertBlockStmt, nil block */;

    void gcWriteBarrierBX()
    /* convertBlockStmt, nil block */;

    void gcWriteBarrierBP()
    /* convertBlockStmt, nil block */;

    void gcWriteBarrierSI()
    /* convertBlockStmt, nil block */;

    void gcWriteBarrierR8()
    /* convertBlockStmt, nil block */;

    void gcWriteBarrierR9()
    /* convertBlockStmt, nil block */;

    void stackcheck()
    /* convertBlockStmt, nil block */;

    void settls()
    /* convertBlockStmt, nil block */;

    void retpolineAX()
    /* convertBlockStmt, nil block */;

    void retpolineCX()
    /* convertBlockStmt, nil block */;

    void retpolineDX()
    /* convertBlockStmt, nil block */;

    void retpolineBX()
    /* convertBlockStmt, nil block */;

    void retpolineBP()
    /* convertBlockStmt, nil block */;

    void retpolineSI()
    /* convertBlockStmt, nil block */;

    void retpolineDI()
    /* convertBlockStmt, nil block */;

    void retpolineR8()
    /* convertBlockStmt, nil block */;

    void retpolineR9()
    /* convertBlockStmt, nil block */;

    void retpolineR10()
    /* convertBlockStmt, nil block */;

    void retpolineR11()
    /* convertBlockStmt, nil block */;

    void retpolineR12()
    /* convertBlockStmt, nil block */;

    void retpolineR13()
    /* convertBlockStmt, nil block */;

    void retpolineR14()
    /* convertBlockStmt, nil block */;

    void retpolineR15()
    /* convertBlockStmt, nil block */;

    void asmcgocall_no_g(unsafe::Pointer fn, unsafe::Pointer arg)
    /* convertBlockStmt, nil block */;

    void asmcgocall_landingpad()
    /* convertBlockStmt, nil block */;

    void spillArgs()
    /* convertBlockStmt, nil block */;

    void unspillArgs()
    /* convertBlockStmt, nil block */;

    uintptr_t getfp()
    /* convertBlockStmt, nil block */;

}

