// generated by GoCpp from file '$(ImportDir)/runtime/sema.go'
#pragma once

#include "gocpp/support.fwd.h"


namespace golang::runtime
{
    const long semTabSize = 251;
    struct gocpp_id_0;
    using semaProfileFlags = int;
    const semaProfileFlags semaBlockProfile = 1 << 0;
    const semaProfileFlags semaMutexProfile = 1 << 1;
}
#include "golang/internal/cpu/cpu_x86.fwd.h"
#include "golang/runtime/internal/atomic/types.fwd.h"
#include "golang/runtime/runtime2.fwd.h"
#include "golang/unsafe/unsafe.fwd.h"

namespace golang::runtime
{
    struct semaRoot;
    using semTable = gocpp::array<gocpp_id_0, semTabSize>;
    struct notifyList;
}
#include "golang/runtime/cputicks.fwd.h"
#include "golang/runtime/internal/atomic/atomic_amd64.fwd.h"
#include "golang/runtime/internal/atomic/stubs.fwd.h"
// #include "golang/runtime/lock_sema.fwd.h" [Ignored, known errors]
// #include "golang/runtime/lockrank.fwd.h" [Ignored, known errors]
// #include "golang/runtime/lockrank_off.fwd.h" [Ignored, known errors]
#include "golang/runtime/mprof.fwd.h"
#include "golang/runtime/panic.fwd.h"
#include "golang/runtime/proc.fwd.h"
// #include "golang/runtime/rand.fwd.h" [Ignored, known errors]
// #include "golang/runtime/stubs.fwd.h" [Ignored, known errors]
#include "golang/runtime/time_nofake.fwd.h"
// #include "golang/runtime/trace2runtime.fwd.h" [Ignored, known errors]
