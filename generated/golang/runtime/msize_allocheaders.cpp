// generated by GoCpp from file '$(ImportDir)/runtime/msize_allocheaders.go'
#include <complex>
#include <functional>
#include <iostream>
#include <iomanip>
#include <map>
#include <string>
#include <tuple>
#include <vector>

#include "golang/runtime/msize_allocheaders.h"
#include "gocpp/support.h"

#include "golang/runtime/malloc.h"
#include "golang/runtime/mbitmap_allocheaders.h"
#include "golang/runtime/sizeclasses.h"
#include "golang/runtime/stubs.h"

namespace golang::runtime
{
    namespace rec
    {
        using namespace mocklib::rec;
    }

    uintptr_t roundupsize(uintptr_t size, bool noscan)
    {
        uintptr_t reqSize;
        reqSize = size;
        if(reqSize <= maxSmallSize - mallocHeaderSize)
        {
            uintptr_t reqSize;
            if(! noscan && reqSize > minSizeForMallocHeader)
            {
                uintptr_t reqSize;
                reqSize += mallocHeaderSize;
            }
            if(reqSize <= smallSizeMax - 8)
            {
                uintptr_t reqSize;
                return uintptr_t(class_to_size[size_to_class8[divRoundUp(reqSize, smallSizeDiv)]]) - (reqSize - size);
            }
            return uintptr_t(class_to_size[size_to_class128[divRoundUp(reqSize - smallSizeMax, largeSizeDiv)]]) - (reqSize - size);
        }
        reqSize += pageSize - 1;
        if(reqSize < size)
        {
            uintptr_t reqSize;
            return size;
        }
        return reqSize &^ (pageSize - 1);
    }

}

