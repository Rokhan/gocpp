// generated by GoCpp from file '$(ImportDir)/internal/poll/errno_windows.go'
#include <complex>
#include <functional>
#include <iostream>
#include <iomanip>
#include <map>
#include <string>
#include <tuple>
#include <vector>

#include "golang/internal/poll/errno_windows.h"
#include "gocpp/support.h"

#include "golang/syscall/syscall_windows.h"
#include "golang/syscall/types_windows.h"

namespace golang::poll
{
    namespace rec
    {
        using namespace mocklib::rec;
        using namespace syscall::rec;
    }

    gocpp::error errERROR_IO_PENDING = syscall::Errno(syscall::ERROR_IO_PENDING);
    struct gocpp::error errnoErr(syscall::Errno e)
    {
        //Go switch emulation
        {
            auto condition = e;
            int conditionId = -1;
            if(condition == 0) { conditionId = 0; }
            else if(condition == syscall::ERROR_IO_PENDING) { conditionId = 1; }
            switch(conditionId)
            {
                case 0:
                    return nullptr;
                    break;
                case 1:
                    return errERROR_IO_PENDING;
                    break;
            }
        }
        return e;
    }

}

