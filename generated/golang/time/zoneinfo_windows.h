// generated by GoCpp from file '$(ImportDir)/time/zoneinfo_windows.go'
#pragma once

#include <functional>
#include <string>
#include <tuple>
#include <vector>

#include "golang/time/zoneinfo_windows.fwd.h"
#include "gocpp/support.h"

#include "golang/internal/syscall/windows/registry/key.h"
#include "golang/syscall/types_windows.h"

namespace golang::time
{
    std::tuple<bool, struct gocpp::error> matchZoneKey(registry::Key zones, std::string kname, std::string stdname, std::string dstname);
    std::tuple<std::string, struct gocpp::error> toEnglishName(std::string stdname, std::string dstname);
    std::string extractCAPS(std::string desc);
    std::tuple<std::string, std::string> abbrev(syscall::Timezoneinformation* z);
    int64_t pseudoUnix(int year, syscall::Systemtime* d);
    void initLocalFromTZI(syscall::Timezoneinformation* i);
    extern syscall::Timezoneinformation usPacific;
    extern syscall::Timezoneinformation aus;
    void initLocal();

    namespace rec
    {
    }
}

