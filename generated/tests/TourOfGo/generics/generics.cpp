// generated by GoCpp from file 'tests/TourOfGo/generics/generics.go'
#include <complex>
#include <functional>
#include <iostream>
#include <iomanip>
#include <map>
#include <string>
#include <tuple>
#include <vector>

#include "tests/TourOfGo/generics/generics.h"
#include "gocpp/support.h"

// #include "golang/fmt/print.h"  [Ignored, known errors]

namespace golang::main
{
    std::tuple<uint32_t, uint32_t> HashStr(T sep)
    {
        auto hash = uint32_t(0);
        for(auto i = 0; i < len(sep); i++)
        {
            hash = hash * PrimeRK + uint32_t(sep[i]);
        }
        uint32_t pow = 1;
        uint32_t sq = PrimeRK;
        for(auto i = len(sep); i > 0; i >>= 1)
        {
            if(i & 1 != 0)
            {
                pow *= sq;
            }
            sq *= sq;
        }
        return {hash, pow};
    }

    void main()
    {
        auto [h1, h2] = HashStr("toto");
        mocklib::Printf("Hash: %v, %v\n", h1, h2);
        auto [h3, h4] = HashStr(gocpp::slice<unsigned char> {1, 2, 3});
        mocklib::Printf("Hash: %v, %v\n", h3, h4);
    }

}

int main()
{
    try
    {
        std::cout << std::boolalpha << std::fixed << std::setprecision(5);
        golang::main::main();
        return 0;
    }
    catch(const gocpp::GoPanic& ex)
    {
        std::cout << "Panic: " << ex.what() << std::endl;
        return -1;
    }
}
