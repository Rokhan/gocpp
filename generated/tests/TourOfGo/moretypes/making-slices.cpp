// generated by GoCpp from file 'tests/TourOfGo/moretypes/making-slices.go'
#include <complex>
#include <functional>
#include <iostream>
#include <iomanip>
#include <map>
#include <string>
#include <tuple>
#include <vector>

#include "tests/TourOfGo/moretypes/making-slices.h"
#include "gocpp/support.h"

#include "golang/fmt/print.h"

namespace golang::main
{
    namespace rec
    {
        using namespace mocklib::rec;
        using namespace fmt::rec;
    }

    void main()
    {
        auto a = gocpp::make(gocpp::Tag<gocpp::slice<int>>(), 5);
        printSlice("a", a);
        auto b = gocpp::make(gocpp::Tag<gocpp::slice<int>>(), 0, 5);
        printSlice("b", b);
        auto bc = b.make_slice(0, 2);
        printSlice("bc", bc);
        auto bd = b.make_slice(2, 5);
        printSlice("bd", bd);
        auto ac = a.make_slice(0, 2);
        printSlice("bc", ac);
        auto ad = a.make_slice(2, 5);
        printSlice("bd", ad);
    }

    void printSlice(std::string s, gocpp::slice<int> x)
    {
        mocklib::Printf("%v len=%v cap=%v %v\n", s, len(x), cap(x), x);
    }

}

int main()
{
    try
    {
        std::cout << std::boolalpha << std::setprecision(5) << std::fixed;
        golang::main::main();
        return 0;
    }
    catch(const gocpp::GoPanic& ex)
    {
        std::cout << "Panic: " << ex.what() << std::endl;
        return -1;
    }
}
