// generated by GoCpp from file '$(ImportDir)/internal/poll/fd_fsync_windows.go'
#include <complex>
#include <functional>
#include <iostream>
#include <iomanip>
#include <map>
#include <string>
#include <tuple>
#include <vector>

#include "golang/internal/poll/fd_fsync_windows.h"
#include "gocpp/support.h"

#include "golang/internal/poll/fd_mutex.h"
#include "golang/internal/poll/fd_poll_runtime.h"
#include "golang/internal/poll/fd_windows.h"
#include "golang/internal/syscall/windows/syscall_windows.h"
#include "golang/sync/mutex.h"
#include "golang/syscall/syscall_windows.h"
#include "golang/syscall/types_windows.h"

namespace golang::poll
{
    namespace rec
    {
        using namespace mocklib::rec;
    }

    struct gocpp::error rec::Fsync(struct FD* fd)
    {
        gocpp::Defer defer;
        try
        {
            if(auto err = rec::incref(gocpp::recv(fd)); err != nullptr)
            {
                return err;
            }
            defer.push_back([=]{ rec::decref(gocpp::recv(fd)); });
            return syscall::Fsync(fd->Sysfd);
        }
        catch(gocpp::GoPanic& gp)
        {
            defer.handlePanic(gp);
        }
    }

}

