// generated by GoCpp from file '$(ImportDir)/runtime/arena.go'
#pragma once

#include "gocpp/support.fwd.h"


namespace golang::runtime
{
    const int userArenaChunkBytesMax = 8 << 20;
    struct gocpp_id_0;
}
#include "golang/runtime/internal/atomic/types.fwd.h"
#include "golang/runtime/malloc.fwd.h"
#include "golang/runtime/mheap.fwd.h"
#include "golang/unsafe/unsafe.fwd.h"

namespace golang::runtime
{
    const uintptr_t userArenaChunkBytes = uintptr_t(int64_t(userArenaChunkBytesMax - heapArenaBytes) & (int64_t(userArenaChunkBytesMax - heapArenaBytes) >> 63) + heapArenaBytes);
    struct userArena;
    struct liveUserArenaChunk;
    const uintptr_t userArenaChunkPages = userArenaChunkBytes / pageSize;
    const uintptr_t userArenaChunkMaxAllocBytes = userArenaChunkBytes / 4;
}
#include "golang/internal/goarch/goarch.fwd.h"
#include "golang/internal/goexperiment/exp_allocheaders_on.fwd.h"
#include "golang/runtime/asan0.fwd.h"
#include "golang/runtime/error.fwd.h"
#include "golang/runtime/internal/atomic/atomic_amd64.fwd.h"
#include "golang/runtime/internal/atomic/stubs.fwd.h"
#include "golang/runtime/internal/math/math.fwd.h"
// #include "golang/runtime/lock_sema.fwd.h" [Ignored, known errors]
// #include "golang/runtime/lockrank.fwd.h" [Ignored, known errors]
// #include "golang/runtime/lockrank_off.fwd.h" [Ignored, known errors]
#include "golang/runtime/mbarrier.fwd.h"
// #include "golang/runtime/mbitmap_allocheaders.fwd.h" [Ignored, known errors]
// #include "golang/runtime/mcache.fwd.h" [Ignored, known errors]
#include "golang/runtime/mcentral.fwd.h"
#include "golang/runtime/mem.fwd.h"
#include "golang/runtime/mfinal.fwd.h"
#include "golang/runtime/mgc.fwd.h"
#include "golang/runtime/mgcmark.fwd.h"
// #include "golang/runtime/mgcpacer.fwd.h" [Ignored, known errors]
#include "golang/runtime/mprof.fwd.h"
#include "golang/runtime/mranges.fwd.h"
#include "golang/runtime/msan0.fwd.h"
#include "golang/runtime/mspanset.fwd.h"
#include "golang/runtime/mstats.fwd.h"
#include "golang/runtime/panic.fwd.h"
// #include "golang/runtime/race0.fwd.h" [Ignored, known errors]
// #include "golang/runtime/runtime1.fwd.h" [Ignored, known errors]
#include "golang/runtime/runtime2.fwd.h"
#include "golang/runtime/slice.fwd.h"
#include "golang/runtime/string.fwd.h"
// #include "golang/runtime/stubs.fwd.h" [Ignored, known errors]
#include "golang/runtime/type.fwd.h"
// #include "golang/runtime/typekind.fwd.h" [Ignored, known errors]
