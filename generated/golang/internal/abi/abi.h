// generated by GoCpp from file '$(ImportDir)/internal/abi/abi.go'
#pragma once

#include <functional>
#include <string>
#include <tuple>
#include <vector>

#include "golang/internal/abi/abi.fwd.h"
#include "gocpp/support.h"


namespace golang::abi
{
    struct RegArgs
    {
        gocpp::array<uintptr_t, IntArgRegs> Ints;
        gocpp::array<uint64_t, FloatArgRegs> Floats;
        gocpp::array<unsafe::Pointer, IntArgRegs> Ptrs;
        IntArgRegBitmap ReturnIsPtr;

        using isGoStruct = void;

        std::ostream& PrintTo(std::ostream& os) const;
    };

    std::ostream& operator<<(std::ostream& os, const struct RegArgs& value);
    void Dump(struct RegArgs* r);
    unsafe::Pointer IntRegArgAddr(struct RegArgs* r, int reg, uintptr_t argSize);
    void Set(IntArgRegBitmap* b, int i);
    bool Get(IntArgRegBitmap* b, int i);
}

