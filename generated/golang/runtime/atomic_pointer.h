// generated by GoCpp from file '$(ImportDir)/runtime/atomic_pointer.go'
#pragma once

#include <functional>
#include <string>
#include <tuple>
#include <vector>

#include "golang/runtime/atomic_pointer.fwd.h"
#include "gocpp/support.h"


namespace golang::runtime
{
    void atomicwb(unsafe::Pointer* ptr, unsafe::Pointer go_new);
    void atomicstorep(unsafe::Pointer ptr, unsafe::Pointer go_new);
    void atomic_storePointer(unsafe::Pointer* ptr, unsafe::Pointer go_new);
    bool atomic_casPointer(unsafe::Pointer* ptr, unsafe::Pointer old, unsafe::Pointer go_new);
    void sync_atomic_StoreUintptr(uintptr_t* ptr, uintptr_t go_new);
    void sync_atomic_StorePointer(unsafe::Pointer* ptr, unsafe::Pointer go_new);
    uintptr_t sync_atomic_SwapUintptr(uintptr_t* ptr, uintptr_t go_new);
    unsafe::Pointer sync_atomic_SwapPointer(unsafe::Pointer* ptr, unsafe::Pointer go_new);
    bool sync_atomic_CompareAndSwapUintptr(uintptr_t* ptr, uintptr_t old, uintptr_t go_new);
    bool sync_atomic_CompareAndSwapPointer(unsafe::Pointer* ptr, unsafe::Pointer old, unsafe::Pointer go_new);

    namespace rec
    {
    }
}

