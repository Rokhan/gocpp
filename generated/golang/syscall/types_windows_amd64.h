// generated by GoCpp from file '$(ImportDir)/syscall/types_windows_amd64.go'
#pragma once

#include <functional>
#include <string>
#include <tuple>
#include <vector>

#include "golang/syscall/types_windows_amd64.fwd.h"
#include "gocpp/support.h"


namespace golang::syscall
{
    struct WSAData
    {
        uint16_t Version;
        uint16_t HighVersion;
        uint16_t MaxSockets;
        uint16_t MaxUdpDg;
        unsigned char* VendorInfo;
        gocpp::array<unsigned char, WSADESCRIPTION_LEN + 1> Description;
        gocpp::array<unsigned char, WSASYS_STATUS_LEN + 1> SystemStatus;

        using isGoStruct = void;

        template<typename T> requires gocpp::GoStruct<T>
        operator T();

        template<typename T> requires gocpp::GoStruct<T>
        bool operator==(const T& ref) const;

        std::ostream& PrintTo(std::ostream& os) const;
    };

    std::ostream& operator<<(std::ostream& os, const struct WSAData& value);
    struct Servent
    {
        unsigned char* Name;
        unsigned char** Aliases;
        unsigned char* Proto;
        uint16_t Port;

        using isGoStruct = void;

        template<typename T> requires gocpp::GoStruct<T>
        operator T();

        template<typename T> requires gocpp::GoStruct<T>
        bool operator==(const T& ref) const;

        std::ostream& PrintTo(std::ostream& os) const;
    };

    std::ostream& operator<<(std::ostream& os, const struct Servent& value);
}

