// generated by GoCpp from file '$(ImportDir)/sync/cond.go'
#pragma once

#include <functional>
#include <string>
#include <tuple>
#include <vector>

#include "golang/sync/cond.fwd.h"
#include "gocpp/support.h"

// #include "golang/sync/atomic/doc.h"  [Ignored, known errors]
#include "golang/sync/mutex.h"
// #include "golang/sync/runtime.h"  [Ignored, known errors]
// #include "golang/sync/runtime2.h"  [Ignored, known errors]
#include "golang/unsafe/unsafe.h"

namespace golang::sync
{
    struct Cond
    {
        noCopy noCopy;
        Locker L;
        notifyList notify;
        copyChecker checker;

        using isGoStruct = void;

        std::ostream& PrintTo(std::ostream& os) const;
    };

    std::ostream& operator<<(std::ostream& os, const struct Cond& value);
    Cond* NewCond(Locker l);
    void Wait(struct Cond* c);
    void Signal(struct Cond* c);
    void Broadcast(struct Cond* c);
    void check(copyChecker* c);
    struct noCopy
    {

        using isGoStruct = void;

        std::ostream& PrintTo(std::ostream& os) const;
    };

    std::ostream& operator<<(std::ostream& os, const struct noCopy& value);
    void Lock(noCopy*);
    void Unlock(noCopy*);
}

