// generated by GoCpp from file 'tests/HelloWorld.go'
#include <complex>
#include <functional>
#include <iostream>
#include <iomanip>
#include <map>
#include <string>
#include <tuple>
#include <vector>

#include "tests/HelloWorld.h"
#include "gocpp/support.h"

#include "golang/fmt/print.h"
#include "golang/image/color/color.h"

namespace golang::main
{
    namespace rec
    {
        using namespace mocklib::rec;
    }

    void main()
    {
        mocklib::Printf("Hello, world.\n"s);
        auto hello = "Hello"s;
        auto world = "World"s;
        helloFunc(hello, world, "!"s);
        using Yyy = color::Color;
        Yyy _ = {};
        auto a = 5;
        auto b = 8 + 7;
        mocklib::Printf("result = %d\n"s, a * b + 4);
        mocklib::Printf("\n"s);
        printN("zzz1"s, square(3));
        auto n = square(2);
        printN("zzz2"s, n);
    }

    int square(int num)
    {
        return num * num;
    }

    void helloFunc(std::string str1, std::string str2, std::string str3)
    {
        mocklib::Printf(str1 + ", "s + str2 + str3);
    }

    void printN(std::string str1, int n)
    {
        mocklib::Printf(str1 + "%d\n"s, n);
    }

}

int main()
{
    try
    {
        std::cout << std::boolalpha << std::setprecision(5) << std::fixed;
        golang::main::main();
        return 0;
    }
    catch(const gocpp::GoPanic& ex)
    {
        std::cout << "Panic: " << ex.what() << std::endl;
        return -1;
    }
}
