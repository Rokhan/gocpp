// generated by GoCpp from file '$(ImportDir)/os/stat.go'
#include <complex>
#include <functional>
#include <iostream>
#include <iomanip>
#include <map>
#include <string>
#include <tuple>
#include <vector>

#include "golang/os/stat.h"
#include "gocpp/support.h"

#include "golang/internal/testlog/log.h"
#include "golang/io/fs/fs.h"
#include "golang/os/stat_windows.h"
#include "golang/os/types.h"
#include "golang/time/time.h"
#include "golang/time/zoneinfo.h"

namespace golang::os
{
    namespace rec
    {
        using namespace mocklib::rec;
    }

    // Stat returns a FileInfo describing the named file.
    // If there is an error, it will be of type *PathError.
    std::tuple<os::FileInfo, struct gocpp::error> Stat(std::string name)
    {
        testlog::Stat(name);
        return statNolog(name);
    }

    // Lstat returns a FileInfo describing the named file.
    // If the file is a symbolic link, the returned FileInfo
    // describes the symbolic link. Lstat makes no attempt to follow the link.
    // If there is an error, it will be of type *PathError.
    //
    // On Windows, if the file is a reparse point that is a surrogate for another
    // named entity (such as a symbolic link or mounted folder), the returned
    // FileInfo describes the reparse point, and makes no attempt to resolve it.
    std::tuple<os::FileInfo, struct gocpp::error> Lstat(std::string name)
    {
        testlog::Stat(name);
        return lstatNolog(name);
    }

}

