// generated by GoCpp from file '$(ImportDir)/runtime/float.go'
#include <complex>
#include <functional>
#include <iostream>
#include <iomanip>
#include <map>
#include <string>
#include <tuple>
#include <vector>

#include "golang/runtime/float.h"
#include "gocpp/support.h"

#include "golang/unsafe/unsafe.h"

namespace golang::runtime
{
    namespace rec
    {
        using namespace mocklib::rec;
    }

    double inf = float64frombits(0x7FF0000000000000);
    bool isNaN(double f)
    {
        bool is;
        return f != f;
    }

    bool isFinite(double f)
    {
        return ! isNaN(f - f);
    }

    bool isInf(double f)
    {
        return ! isNaN(f) && ! isFinite(f);
    }

    double abs(double x)
    {
        auto sign = 1 << 63;
        return float64frombits(float64bits(x) &^ sign);
    }

    double copysign(double x, double y)
    {
        auto sign = 1 << 63;
        return float64frombits(float64bits(x) &^ sign | float64bits(y) & sign);
    }

    uint64_t float64bits(double f)
    {
        return *(uint64_t*)(unsafe::Pointer(& f));
    }

    double float64frombits(uint64_t b)
    {
        return *(double*)(unsafe::Pointer(& b));
    }

}

