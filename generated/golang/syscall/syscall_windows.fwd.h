// generated by GoCpp from file '$(ImportDir)/syscall/syscall_windows.go'
#pragma once

#include "gocpp/support.fwd.h"


namespace golang::syscall
{
    using Handle = uintptr_t;
    using Errno = uintptr_t;
    const bool ImplementsGetwd = true;
    const long _UTIME_OMIT = - 1;
    const uintptr_t socket_error = uintptr_t(~ uint32_t(0));
    struct RawSockaddrInet4;
    struct RawSockaddrInet6;
    struct RawSockaddr;
    struct RawSockaddrAny;
    struct SockaddrInet4;
    struct SockaddrInet6;
    struct SockaddrUnix;
    struct gocpp_id_15;
    struct WaitStatus;
    struct Timespec;
    struct Linger;
    struct sysLinger;
    struct IPMreq;
    struct IPv6Mreq;
    using Signal = int;
    const Handle InvalidHandle = ~ Handle(0);
    const Errno _ERROR_NOT_ENOUGH_MEMORY = Errno(8);
    const Errno _ERROR_NOT_SUPPORTED = Errno(50);
    const Errno _ERROR_BAD_NETPATH = Errno(53);
    const Errno _ERROR_CALL_NOT_IMPLEMENTED = Errno(120);
}
#include "golang/syscall/types_windows.fwd.h"
#include "golang/unsafe/unsafe.fwd.h"

namespace golang::syscall
{
    const uintptr_t ptrSize = gocpp::Sizeof<uintptr_t>();
    struct Sockaddr;
    struct RawSockaddrUnix;
    struct Rusage;
}
