// generated by GoCpp from file '$(ImportDir)/runtime/panic.go'
#pragma once

#include "gocpp/support.fwd.h"


namespace golang::runtime
{
    using throwType = uint32_t;
    struct PanicNilError;
    const throwType throwTypeNone = 0;
    const throwType throwTypeUser = 1;
    const throwType throwTypeRuntime = 2;
}
#include "golang/internal/abi/funcpc.fwd.h"
// #include "golang/internal/abi/symtab.fwd.h" [Ignored, known errors]
#include "golang/internal/goarch/goarch.fwd.h"
#include "golang/internal/goarch/zgoarch_amd64.fwd.h"
#include "golang/runtime/debuglog.fwd.h"
#include "golang/runtime/error.fwd.h"
#include "golang/runtime/extern.fwd.h"
#include "golang/runtime/internal/atomic/types.fwd.h"
#include "golang/runtime/internal/sys/consts.fwd.h"
#include "golang/runtime/internal/sys/intrinsics.fwd.h"
// #include "golang/runtime/lock_sema.fwd.h" [Ignored, known errors]
// #include "golang/runtime/os_windows.fwd.h" [Ignored, known errors]
// #include "golang/runtime/print.fwd.h" [Ignored, known errors]
#include "golang/runtime/proc.fwd.h"
// #include "golang/runtime/race0.fwd.h" [Ignored, known errors]
#include "golang/runtime/runtime.fwd.h"
// #include "golang/runtime/runtime1.fwd.h" [Ignored, known errors]
#include "golang/runtime/runtime2.fwd.h"
#include "golang/runtime/security_nonunix.fwd.h"
// #include "golang/runtime/signal_windows.fwd.h" [Ignored, known errors]
#include "golang/runtime/string.fwd.h"
// #include "golang/runtime/stubs.fwd.h" [Ignored, known errors]
// #include "golang/runtime/symtab.fwd.h" [Ignored, known errors]
// #include "golang/runtime/traceback.fwd.h" [Ignored, known errors]
#include "golang/runtime/type.fwd.h"
#include "golang/unsafe/unsafe.fwd.h"
