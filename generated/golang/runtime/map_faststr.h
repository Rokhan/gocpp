// generated by GoCpp from file '$(ImportDir)/runtime/map_faststr.go'
#pragma once

#include <functional>
#include <string>
#include <tuple>
#include <vector>

#include "golang/runtime/map_faststr.fwd.h"
#include "gocpp/support.h"

#include "golang/internal/abi/type.h"
#include "golang/runtime/map.h"

namespace golang::runtime
{
    unsafe::Pointer mapaccess1_faststr(struct maptype* t, struct hmap* h, std::string ky);
    std::tuple<unsafe::Pointer, bool> mapaccess2_faststr(struct maptype* t, struct hmap* h, std::string ky);
    unsafe::Pointer mapassign_faststr(struct maptype* t, struct hmap* h, std::string s);
    void mapdelete_faststr(struct maptype* t, struct hmap* h, std::string ky);
    void growWork_faststr(struct maptype* t, struct hmap* h, uintptr_t bucket);
    void evacuate_faststr(struct maptype* t, struct hmap* h, uintptr_t oldbucket);

    namespace rec
    {
    }
}

