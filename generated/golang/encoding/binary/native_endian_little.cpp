// generated by GoCpp from file '$(ImportDir)/encoding/binary/native_endian_little.go'
#include <complex>
#include <functional>
#include <iostream>
#include <iomanip>
#include <map>
#include <string>
#include <tuple>
#include <vector>

#include "golang/encoding/binary/native_endian_little.h"
#include "gocpp/support.h"

#include "golang/encoding/binary/binary.h"

namespace golang::binary
{
    namespace rec
    {
        using namespace mocklib::rec;
    }

    
    template<typename T> requires gocpp::GoStruct<T>
    nativeEndian::operator T()
    {
        T result;
        result.littleEndian = this->littleEndian;
        return result;
    }

    template<typename T> requires gocpp::GoStruct<T>
    bool nativeEndian::operator==(const T& ref) const
    {
        if (littleEndian != ref.littleEndian) return false;
        return true;
    }

    std::ostream& nativeEndian::PrintTo(std::ostream& os) const
    {
        os << '{';
        os << "" << littleEndian;
        os << '}';
        return os;
    }

    std::ostream& operator<<(std::ostream& os, const struct nativeEndian& value)
    {
        return value.PrintTo(os);
    }

    // NativeEndian is the native-endian implementation of [ByteOrder] and [AppendByteOrder].
    nativeEndian NativeEndian;
}

