// generated by GoCpp from file '$(ImportDir)/runtime/print.go'
#pragma once

#include <functional>
#include <string>
#include <tuple>
#include <vector>

#include "golang/runtime/print.fwd.h"
#include "gocpp/support.h"

#include "golang/internal/abi/type.h"
#include "golang/runtime/lockrank_off.h"
#include "golang/runtime/runtime2.h"

namespace golang::runtime
{
    gocpp::slice<unsigned char> bytes(std::string s);
    void recordForPanic(gocpp::slice<unsigned char> b);
    void printlock();
    void printunlock();
    void gwrite(gocpp::slice<unsigned char> b);
    void printsp();
    void printnl();
    void printbool(bool v);
    void printfloat(double v);
    void printcomplex(struct gocpp::complex128 c);
    void printuint(uint64_t v);
    void printint(int64_t v);
    extern long minhexdigits;
    void printhex(uint64_t v);
    void printpointer(unsafe::Pointer p);
    void printuintptr(uintptr_t p);
    void printstring(std::string s);
    void printslice(gocpp::slice<unsigned char> s);
    void printeface(struct eface e);
    void printiface(struct iface i);
    void hexdumpWords(uintptr_t p, uintptr_t end, std::function<unsigned char (uintptr_t)> mark);

    namespace rec
    {
    }
}

