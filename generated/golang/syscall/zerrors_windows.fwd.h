// generated by GoCpp from file '$(ImportDir)/syscall/zerrors_windows.go'
#pragma once

#include "gocpp/support.fwd.h"


namespace golang::syscall
{
    const int APPLICATION_ERROR = 1 << 29;
    const Errno EACCES = APPLICATION_ERROR + 1;
    const Errno EADDRINUSE = APPLICATION_ERROR + 2;
    const Errno EADDRNOTAVAIL = APPLICATION_ERROR + 3;
    const Errno EADV = APPLICATION_ERROR + 4;
    const Errno EAFNOSUPPORT = APPLICATION_ERROR + 5;
    const Errno EAGAIN = APPLICATION_ERROR + 6;
    const Errno EALREADY = APPLICATION_ERROR + 7;
    const Errno EBADE = APPLICATION_ERROR + 8;
    const Errno EBADF = APPLICATION_ERROR + 9;
    const Errno EBADFD = APPLICATION_ERROR + 10;
    const Errno EBADMSG = APPLICATION_ERROR + 11;
    const Errno EBADR = APPLICATION_ERROR + 12;
    const Errno EBADRQC = APPLICATION_ERROR + 13;
    const Errno EBADSLT = APPLICATION_ERROR + 14;
    const Errno EBFONT = APPLICATION_ERROR + 15;
    const Errno EBUSY = APPLICATION_ERROR + 16;
    const Errno ECANCELED = APPLICATION_ERROR + 17;
    const Errno ECHILD = APPLICATION_ERROR + 18;
    const Errno ECHRNG = APPLICATION_ERROR + 19;
    const Errno ECOMM = APPLICATION_ERROR + 20;
    const Errno ECONNABORTED = APPLICATION_ERROR + 21;
    const Errno ECONNREFUSED = APPLICATION_ERROR + 22;
    const Errno ECONNRESET = APPLICATION_ERROR + 23;
    const Errno EDEADLK = APPLICATION_ERROR + 24;
    const Errno EDEADLOCK = APPLICATION_ERROR + 25;
    const Errno EDESTADDRREQ = APPLICATION_ERROR + 26;
    const Errno EDOM = APPLICATION_ERROR + 27;
    const Errno EDOTDOT = APPLICATION_ERROR + 28;
    const Errno EDQUOT = APPLICATION_ERROR + 29;
    const Errno EEXIST = APPLICATION_ERROR + 30;
    const Errno EFAULT = APPLICATION_ERROR + 31;
    const Errno EFBIG = APPLICATION_ERROR + 32;
    const Errno EHOSTDOWN = APPLICATION_ERROR + 33;
    const Errno EHOSTUNREACH = APPLICATION_ERROR + 34;
    const Errno EIDRM = APPLICATION_ERROR + 35;
    const Errno EILSEQ = APPLICATION_ERROR + 36;
    const Errno EINPROGRESS = APPLICATION_ERROR + 37;
    const Errno EINTR = APPLICATION_ERROR + 38;
    const Errno EINVAL = APPLICATION_ERROR + 39;
    const Errno EIO = APPLICATION_ERROR + 40;
    const Errno EISCONN = APPLICATION_ERROR + 41;
    const Errno EISDIR = APPLICATION_ERROR + 42;
    const Errno EISNAM = APPLICATION_ERROR + 43;
    const Errno EKEYEXPIRED = APPLICATION_ERROR + 44;
    const Errno EKEYREJECTED = APPLICATION_ERROR + 45;
    const Errno EKEYREVOKED = APPLICATION_ERROR + 46;
    const Errno EL2HLT = APPLICATION_ERROR + 47;
    const Errno EL2NSYNC = APPLICATION_ERROR + 48;
    const Errno EL3HLT = APPLICATION_ERROR + 49;
    const Errno EL3RST = APPLICATION_ERROR + 50;
    const Errno ELIBACC = APPLICATION_ERROR + 51;
    const Errno ELIBBAD = APPLICATION_ERROR + 52;
    const Errno ELIBEXEC = APPLICATION_ERROR + 53;
    const Errno ELIBMAX = APPLICATION_ERROR + 54;
    const Errno ELIBSCN = APPLICATION_ERROR + 55;
    const Errno ELNRNG = APPLICATION_ERROR + 56;
    const Errno ELOOP = APPLICATION_ERROR + 57;
    const Errno EMEDIUMTYPE = APPLICATION_ERROR + 58;
    const Errno EMFILE = APPLICATION_ERROR + 59;
    const Errno EMLINK = APPLICATION_ERROR + 60;
    const Errno EMSGSIZE = APPLICATION_ERROR + 61;
    const Errno EMULTIHOP = APPLICATION_ERROR + 62;
    const Errno ENAMETOOLONG = APPLICATION_ERROR + 63;
    const Errno ENAVAIL = APPLICATION_ERROR + 64;
    const Errno ENETDOWN = APPLICATION_ERROR + 65;
    const Errno ENETRESET = APPLICATION_ERROR + 66;
    const Errno ENETUNREACH = APPLICATION_ERROR + 67;
    const Errno ENFILE = APPLICATION_ERROR + 68;
    const Errno ENOANO = APPLICATION_ERROR + 69;
    const Errno ENOBUFS = APPLICATION_ERROR + 70;
    const Errno ENOCSI = APPLICATION_ERROR + 71;
    const Errno ENODATA = APPLICATION_ERROR + 72;
    const Errno ENODEV = APPLICATION_ERROR + 73;
    const Errno ENOEXEC = APPLICATION_ERROR + 74;
    const Errno ENOKEY = APPLICATION_ERROR + 75;
    const Errno ENOLCK = APPLICATION_ERROR + 76;
    const Errno ENOLINK = APPLICATION_ERROR + 77;
    const Errno ENOMEDIUM = APPLICATION_ERROR + 78;
    const Errno ENOMEM = APPLICATION_ERROR + 79;
    const Errno ENOMSG = APPLICATION_ERROR + 80;
    const Errno ENONET = APPLICATION_ERROR + 81;
    const Errno ENOPKG = APPLICATION_ERROR + 82;
    const Errno ENOPROTOOPT = APPLICATION_ERROR + 83;
    const Errno ENOSPC = APPLICATION_ERROR + 84;
    const Errno ENOSR = APPLICATION_ERROR + 85;
    const Errno ENOSTR = APPLICATION_ERROR + 86;
    const Errno ENOSYS = APPLICATION_ERROR + 87;
    const Errno ENOTBLK = APPLICATION_ERROR + 88;
    const Errno ENOTCONN = APPLICATION_ERROR + 89;
    const Errno ENOTEMPTY = APPLICATION_ERROR + 90;
    const Errno ENOTNAM = APPLICATION_ERROR + 91;
    const Errno ENOTRECOVERABLE = APPLICATION_ERROR + 92;
    const Errno ENOTSOCK = APPLICATION_ERROR + 93;
    const Errno ENOTSUP = APPLICATION_ERROR + 94;
    const Errno ENOTTY = APPLICATION_ERROR + 95;
    const Errno ENOTUNIQ = APPLICATION_ERROR + 96;
    const Errno ENXIO = APPLICATION_ERROR + 97;
    const Errno EOPNOTSUPP = APPLICATION_ERROR + 98;
    const Errno EOVERFLOW = APPLICATION_ERROR + 99;
    const Errno EOWNERDEAD = APPLICATION_ERROR + 100;
    const Errno EPERM = APPLICATION_ERROR + 101;
    const Errno EPFNOSUPPORT = APPLICATION_ERROR + 102;
    const Errno EPIPE = APPLICATION_ERROR + 103;
    const Errno EPROTO = APPLICATION_ERROR + 104;
    const Errno EPROTONOSUPPORT = APPLICATION_ERROR + 105;
    const Errno EPROTOTYPE = APPLICATION_ERROR + 106;
    const Errno ERANGE = APPLICATION_ERROR + 107;
    const Errno EREMCHG = APPLICATION_ERROR + 108;
    const Errno EREMOTE = APPLICATION_ERROR + 109;
    const Errno EREMOTEIO = APPLICATION_ERROR + 110;
    const Errno ERESTART = APPLICATION_ERROR + 111;
    const Errno EROFS = APPLICATION_ERROR + 112;
    const Errno ESHUTDOWN = APPLICATION_ERROR + 113;
    const Errno ESOCKTNOSUPPORT = APPLICATION_ERROR + 114;
    const Errno ESPIPE = APPLICATION_ERROR + 115;
    const Errno ESRCH = APPLICATION_ERROR + 116;
    const Errno ESRMNT = APPLICATION_ERROR + 117;
    const Errno ESTALE = APPLICATION_ERROR + 118;
    const Errno ESTRPIPE = APPLICATION_ERROR + 119;
    const Errno ETIME = APPLICATION_ERROR + 120;
    const Errno ETIMEDOUT = APPLICATION_ERROR + 121;
    const Errno ETOOMANYREFS = APPLICATION_ERROR + 122;
    const Errno ETXTBSY = APPLICATION_ERROR + 123;
    const Errno EUCLEAN = APPLICATION_ERROR + 124;
    const Errno EUNATCH = APPLICATION_ERROR + 125;
    const Errno EUSERS = APPLICATION_ERROR + 126;
    const Errno EWOULDBLOCK = APPLICATION_ERROR + 127;
    const Errno EXDEV = APPLICATION_ERROR + 128;
    const Errno EXFULL = APPLICATION_ERROR + 129;
    const Errno EWINDOWS = APPLICATION_ERROR + 130;
}
#include "golang/syscall/syscall_windows.fwd.h"
#include "golang/syscall/types_windows.fwd.h"

namespace golang::syscall
{
    const Errno ENOENT = ERROR_FILE_NOT_FOUND;
    const Errno ENOTDIR = ERROR_PATH_NOT_FOUND;
    const Errno E2BIG = APPLICATION_ERROR + 0;
}
