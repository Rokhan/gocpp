// generated by GoCpp from file '$(ImportDir)/runtime/mgcpacer.go'
#pragma once

#include "gocpp/support.fwd.h"

#include "golang/internal/cpu/cpu.fwd.h"
#include "golang/internal/goexperiment/exp_heapminimum512kib_off.fwd.h"
#include "golang/runtime/internal/atomic/types.fwd.h"
#include "golang/runtime/env_posix.fwd.h"
#include "golang/runtime/lfstack.fwd.h"
// #include "golang/runtime/lock_sema.fwd.h"  [Ignored, known errors]
// #include "golang/runtime/lockrank_off.fwd.h"  [Ignored, known errors]
#include "golang/runtime/mgc.fwd.h"
// #include "golang/runtime/mgclimit.fwd.h"  [Ignored, known errors]
#include "golang/runtime/mgcscavenge.fwd.h"
#include "golang/runtime/mgcsweep.fwd.h"
// #include "golang/runtime/mstats.fwd.h"  [Ignored, known errors]
#include "golang/runtime/panic.fwd.h"
// #include "golang/runtime/print.fwd.h"  [Ignored, known errors]
#include "golang/runtime/proc.fwd.h"
// #include "golang/runtime/rand.fwd.h"  [Ignored, known errors]
#include "golang/runtime/runtime2.fwd.h"
#include "golang/runtime/string.fwd.h"
// #include "golang/runtime/stubs.fwd.h"  [Ignored, known errors]
#include "golang/runtime/time_nofake.fwd.h"
#include "golang/runtime/trace2runtime.fwd.h"

namespace golang::runtime
{
    struct gcControllerState;
}

