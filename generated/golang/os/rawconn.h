// generated by GoCpp from file '$(ImportDir)/os/rawconn.go'
#pragma once

#include <functional>
#include <string>
#include <tuple>
#include <vector>

#include "golang/os/rawconn.fwd.h"
#include "gocpp/support.h"

#include "golang/internal/poll/fd_mutex.h"
#include "golang/internal/poll/fd_poll_runtime.h"
#include "golang/internal/poll/fd_windows.h"
#include "golang/internal/syscall/windows/syscall_windows.h"
#include "golang/os/dir_windows.h"
#include "golang/os/file_windows.h"
#include "golang/os/types.h"
#include "golang/sync/mutex.h"
#include "golang/syscall/syscall_windows.h"
#include "golang/syscall/types_windows.h"

namespace golang::os
{
    struct rawConn
    {
        File* file;

        using isGoStruct = void;

        template<typename T> requires gocpp::GoStruct<T>
        operator T();

        template<typename T> requires gocpp::GoStruct<T>
        bool operator==(const T& ref) const;

        std::ostream& PrintTo(std::ostream& os) const;
    };

    std::ostream& operator<<(std::ostream& os, const struct rawConn& value);
    struct gocpp::error Control(struct rawConn* c, std::function<void (uintptr_t)> f);
    struct gocpp::error Read(struct rawConn* c, std::function<bool (uintptr_t)> f);
    struct gocpp::error Write(struct rawConn* c, std::function<bool (uintptr_t)> f);
    std::tuple<struct rawConn*, struct gocpp::error> newRawConn(struct File* file);
}

