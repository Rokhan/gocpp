// generated by GoCpp from file '$(ImportDir)/internal/syscall/windows/registry/key.go'
#pragma once

#include "gocpp/support.fwd.h"


namespace golang::registry
{
    const long ALL_ACCESS = 0xf003f;
    const long CREATE_LINK = 0x00020;
    const long CREATE_SUB_KEY = 0x00004;
    const long ENUMERATE_SUB_KEYS = 0x00008;
    const long EXECUTE = 0x20019;
    const long NOTIFY = 0x00010;
    const long QUERY_VALUE = 0x00001;
    const long READ = 0x20019;
    const long SET_VALUE = 0x00002;
    const long WOW64_32KEY = 0x00200;
    const long WOW64_64KEY = 0x00100;
    const long WRITE = 0x20006;
}
#include "golang/syscall/syscall_windows.fwd.h"
#include "golang/syscall/types_windows.fwd.h"

namespace golang::registry
{
    using Key = syscall::Handle;
    struct KeyInfo;
    const Key CLASSES_ROOT = Key(syscall::HKEY_CLASSES_ROOT);
    const Key CURRENT_USER = Key(syscall::HKEY_CURRENT_USER);
    const Key LOCAL_MACHINE = Key(syscall::HKEY_LOCAL_MACHINE);
    const Key USERS = Key(syscall::HKEY_USERS);
    const Key CURRENT_CONFIG = Key(syscall::HKEY_CURRENT_CONFIG);
}
#include "golang/internal/syscall/windows/registry/syscall.fwd.h"
#include "golang/internal/syscall/windows/registry/zsyscall_windows.fwd.h"
#include "golang/runtime/proc.fwd.h"
#include "golang/syscall/zsyscall_windows.fwd.h"
