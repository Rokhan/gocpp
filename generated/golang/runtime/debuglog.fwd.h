// generated by GoCpp from file '$(ImportDir)/runtime/debuglog.go'
#pragma once

#include "gocpp/support.fwd.h"


namespace golang::runtime
{
    const int debugLogBytes = 16 << 10;
    const int debugLogUnknown = 1 + 0;
    const int debugLogBoolTrue = 1 + 1;
    const int debugLogBoolFalse = 1 + 2;
    const int debugLogInt = 1 + 3;
    const int debugLogUint = 1 + 4;
    const int debugLogHex = 1 + 5;
    const int debugLogPtr = 1 + 6;
    const int debugLogString = 1 + 7;
    const int debugLogConstString = 1 + 8;
    const int debugLogStringOverflow = 1 + 9;
    const int debugLogPC = 1 + 10;
    const int debugLogTraceback = 1 + 11;
    const long debugLogHeaderSize = 2;
    struct debugLogReader;
    struct gocpp_id_0;
    const int debugLogStringLimit = debugLogBytes / 8;
    const int debugLogSyncSize = debugLogHeaderSize + 2 * 8;
}
#include "golang/runtime/internal/atomic/types.fwd.h"
#include "golang/runtime/internal/sys/nih.fwd.h"

namespace golang::runtime
{
    struct dlogger;
    struct debugLogWriter;
    struct debugLogBuf;
}
#include "golang/runtime/cputicks.fwd.h"
#include "golang/runtime/debuglog_off.fwd.h"
#include "golang/runtime/internal/atomic/stubs.fwd.h"
#include "golang/runtime/mem_windows.fwd.h"
#include "golang/runtime/mgc.fwd.h"
#include "golang/runtime/panic.fwd.h"
// #include "golang/runtime/print.fwd.h" [Ignored, known errors]
#include "golang/runtime/runtime2.fwd.h"
#include "golang/runtime/slice.fwd.h"
#include "golang/runtime/string.fwd.h"
// #include "golang/runtime/stubs.fwd.h" [Ignored, known errors]
// #include "golang/runtime/symtab.fwd.h" [Ignored, known errors]
#include "golang/runtime/time_nofake.fwd.h"
// #include "golang/runtime/typekind.fwd.h" [Ignored, known errors]
#include "golang/unsafe/unsafe.fwd.h"
