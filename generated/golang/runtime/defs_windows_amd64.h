// generated by GoCpp from file '$(ImportDir)/runtime/defs_windows_amd64.go'
#pragma once

#include <functional>
#include <string>
#include <tuple>
#include <vector>

#include "golang/runtime/defs_windows_amd64.fwd.h"
#include "gocpp/support.h"


namespace golang::runtime
{
    struct m128a
    {
        uint64_t low;
        int64_t high;

        using isGoStruct = void;

        template<typename T> requires gocpp::GoStruct<T>
        operator T();

        template<typename T> requires gocpp::GoStruct<T>
        bool operator==(const T& ref) const;

        std::ostream& PrintTo(std::ostream& os) const;
    };

    std::ostream& operator<<(std::ostream& os, const struct m128a& value);
    struct context
    {
        uint64_t p1home;
        uint64_t p2home;
        uint64_t p3home;
        uint64_t p4home;
        uint64_t p5home;
        uint64_t p6home;
        uint32_t contextflags;
        uint32_t mxcsr;
        uint16_t segcs;
        uint16_t segds;
        uint16_t seges;
        uint16_t segfs;
        uint16_t seggs;
        uint16_t segss;
        uint32_t eflags;
        uint64_t dr0;
        uint64_t dr1;
        uint64_t dr2;
        uint64_t dr3;
        uint64_t dr6;
        uint64_t dr7;
        uint64_t rax;
        uint64_t rcx;
        uint64_t rdx;
        uint64_t rbx;
        uint64_t rsp;
        uint64_t rbp;
        uint64_t rsi;
        uint64_t rdi;
        uint64_t r8;
        uint64_t r9;
        uint64_t r10;
        uint64_t r11;
        uint64_t r12;
        uint64_t r13;
        uint64_t r14;
        uint64_t r15;
        uint64_t rip;
        gocpp::array<unsigned char, 512> anon0;
        gocpp::array<m128a, 26> vectorregister;
        uint64_t vectorcontrol;
        uint64_t debugcontrol;
        uint64_t lastbranchtorip;
        uint64_t lastbranchfromrip;
        uint64_t lastexceptiontorip;
        uint64_t lastexceptionfromrip;

        using isGoStruct = void;

        template<typename T> requires gocpp::GoStruct<T>
        operator T();

        template<typename T> requires gocpp::GoStruct<T>
        bool operator==(const T& ref) const;

        std::ostream& PrintTo(std::ostream& os) const;
    };

    std::ostream& operator<<(std::ostream& os, const struct context& value);
    uintptr_t ip(struct context* c);
    uintptr_t sp(struct context* c);
    uintptr_t lr(struct context* c);
    void set_lr(struct context* c, uintptr_t x);
    void set_ip(struct context* c, uintptr_t x);
    void set_sp(struct context* c, uintptr_t x);
    void set_fp(struct context* c, uintptr_t x);
    void prepareContextForSigResume(struct context* c);
    void dumpregs(struct context* r);
    struct _DISPATCHER_CONTEXT
    {
        uint64_t controlPc;
        uint64_t imageBase;
        uintptr_t functionEntry;
        uint64_t establisherFrame;
        uint64_t targetIp;
        context* context;
        uintptr_t languageHandler;
        uintptr_t handlerData;

        using isGoStruct = void;

        template<typename T> requires gocpp::GoStruct<T>
        operator T();

        template<typename T> requires gocpp::GoStruct<T>
        bool operator==(const T& ref) const;

        std::ostream& PrintTo(std::ostream& os) const;
    };

    std::ostream& operator<<(std::ostream& os, const struct _DISPATCHER_CONTEXT& value);
    struct context* ctx(struct _DISPATCHER_CONTEXT* c);
}

