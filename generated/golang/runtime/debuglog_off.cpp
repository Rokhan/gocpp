// generated by GoCpp from file '$(ImportDir)/runtime/debuglog_off.go'
#include <complex>
#include <functional>
#include <iostream>
#include <iomanip>
#include <map>
#include <string>
#include <tuple>
#include <vector>

#include "golang/runtime/debuglog_off.h"
#include "gocpp/support.h"

#include "golang/runtime/debuglog.h"
#include "golang/runtime/internal/atomic/types.h"
#include "golang/runtime/internal/sys/nih.h"

namespace golang::runtime
{
    
    template<typename T> requires gocpp::GoStruct<T>
    dlogPerM::operator T()
    {
        T result;
        return result;
    }

    template<typename T> requires gocpp::GoStruct<T>
    bool dlogPerM::operator==(const T& ref) const
    {
        return true;
    }

    std::ostream& dlogPerM::PrintTo(std::ostream& os) const
    {
        os << '{';
        os << '}';
        return os;
    }

    std::ostream& operator<<(std::ostream& os, const struct dlogPerM& value)
    {
        return value.PrintTo(os);
    }

    struct dlogger* getCachedDlogger()
    {
        return nullptr;
    }

    bool putCachedDlogger(struct dlogger* l)
    {
        return false;
    }

}

