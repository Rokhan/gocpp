// generated by GoCpp from file '$(ImportDir)/reflect/value.go'
#pragma once

#include "gocpp/support.fwd.h"


namespace golang::reflect
{
    using flag = uintptr_t;
    const long flagKindWidth = 5;
    const long flagMethodShift = 10;
    const bool debugReflectCall = false;
    struct MapIter;
    struct StringHeader;
    struct SliceHeader;
    using SelectDir = int;
    struct SelectCase;
    struct gocpp_id_11;
    const reflect::flag flagKindMask = (1 << flagKindWidth) - 1;
    const reflect::flag flagStickyRO = 1 << 5;
    const reflect::flag flagEmbedRO = 1 << 6;
    const reflect::flag flagIndir = 1 << 7;
    const reflect::flag flagAddr = 1 << 8;
    const reflect::flag flagMethod = 1 << 9;
    const reflect::SelectDir _ = 0;
    const reflect::SelectDir SelectSend = 1;
    const reflect::SelectDir SelectRecv = 2;
    const reflect::SelectDir SelectDefault = 3;
}
#include "golang/internal/abi/type.fwd.h"
#include "golang/reflect/type.fwd.h"
#include "golang/unsafe/unsafe.fwd.h"

namespace golang::reflect
{
    struct Value;
    struct ValueError;
    struct emptyInterface;
    struct nonEmptyInterface;
    struct hiter;
    struct runtimeSelect;
    const reflect::flag flagRO = flagStickyRO | flagEmbedRO;
}
