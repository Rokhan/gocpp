// generated by GoCpp from file '$(ImportDir)/runtime/internal/atomic/stubs.go'
#pragma once

#include <functional>
#include <string>
#include <tuple>
#include <vector>

#include "golang/runtime/internal/atomic/stubs.fwd.h"
#include "gocpp/support.h"


namespace golang::atomic
{
    bool Cas(uint32_t* ptr, uint32_t old, uint32_t go_new);
    bool Casp1(unsafe::Pointer* ptr, unsafe::Pointer old, unsafe::Pointer go_new);
    bool Casint32(int32_t* ptr, int32_t old, int32_t go_new);
    bool Casint64(int64_t* ptr, int64_t old, int64_t go_new);
    bool Casuintptr(uintptr_t* ptr, uintptr_t old, uintptr_t go_new);
    void Storeint32(int32_t* ptr, int32_t go_new);
    void Storeint64(int64_t* ptr, int64_t go_new);
    void Storeuintptr(uintptr_t* ptr, uintptr_t go_new);
    uintptr_t Loaduintptr(uintptr_t* ptr);
    unsigned int Loaduint(unsigned int* ptr);
    int32_t Loadint32(int32_t* ptr);
    int64_t Loadint64(int64_t* ptr);
    int32_t Xaddint32(int32_t* ptr, int32_t delta);
    int64_t Xaddint64(int64_t* ptr, int64_t delta);
    int32_t Xchgint32(int32_t* ptr, int32_t go_new);
    int64_t Xchgint64(int64_t* ptr, int64_t go_new);

    namespace rec
    {
    }
}

